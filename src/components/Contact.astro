---
import { companyData } from '../data/data.js';

const { contact } = companyData;
---

<section id="contacto" class="py-20 bg-white">
  <div class="container mx-auto px-6">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold mb-4 contact-title">Contáctanos</h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto contact-subtitle">
        Estamos aquí para ayudarte a transformar tu negocio
      </p>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <div class="contact-info">
        <div class="bg-gray-50 p-8 rounded-xl shadow-lg h-full">
          <h3 class="text-2xl font-semibold mb-6">Información de Contacto</h3>
          
          <div class="space-y-6">
            <div class="flex items-start">
              <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-lg flex items-center justify-center mr-4 flex-shrink-0">
                <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold mb-1">Teléfono</h4>
                <p class="text-gray-600">{contact.phone}</p>
              </div>
            </div>
            
            <div class="flex items-start">
              <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-lg flex items-center justify-center mr-4 flex-shrink-0">
                <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold mb-1">Email</h4>
                <p class="text-gray-600">{contact.email}</p>
              </div>
            </div>
            
            <div class="flex items-start">
              <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-lg flex items-center justify-center mr-4 flex-shrink-0">
                <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold mb-1">Dirección</h4>
                <p class="text-gray-600">{contact.address}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="contact-form">
        <form id="contactForm" class="bg-white p-8 rounded-xl shadow-lg">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Nombre</label>
              <input type="text" id="name" name="name" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-300" required>
              <div class="error-message text-red-500 text-sm mt-1 hidden"></div>
            </div>
            
            <div class="form-group">
              <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
              <input type="email" id="email" name="email" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-300" required>
              <div class="error-message text-red-500 text-sm mt-1 hidden"></div>
            </div>
          </div>
          
          <div class="form-group mt-6">
            <label for="subject" class="block text-sm font-medium text-gray-700 mb-1">Asunto</label>
            <input type="text" id="subject" name="subject" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-300" required>
            <div class="error-message text-red-500 text-sm mt-1 hidden"></div>
          </div>
          
          <div class="form-group mt-6">
            <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Mensaje</label>
            <textarea id="message" name="message" rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-300" required></textarea>
            <div class="error-message text-red-500 text-sm mt-1 hidden"></div>
          </div>
          
          <button type="submit" class="mt-8 w-full bg-primary text-white py-3 px-6 rounded-lg font-medium hover:bg-primary-dark transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2">
            Enviar Mensaje
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  
  gsap.registerPlugin(ScrollTrigger);
  
  document.addEventListener('DOMContentLoaded', () => {
    // Animate section title and subtitle
    gsap.from('.contact-title', {
      y: 50,
      opacity: 0,
      duration: 0.8,
      scrollTrigger: {
        trigger: '.contact-title',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });
    
    gsap.from('.contact-subtitle', {
      y: 30,
      opacity: 0,
      duration: 0.8,
      delay: 0.2,
      scrollTrigger: {
        trigger: '.contact-subtitle',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });
    
    // Animate contact info and form
    gsap.from('.contact-info', {
      x: -50,
      opacity: 0,
      duration: 0.8,
      scrollTrigger: {
        trigger: '.contact-info',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });
    
    gsap.from('.contact-form', {
      x: 50,
      opacity: 0,
      duration: 0.8,
      scrollTrigger: {
        trigger: '.contact-form',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });
    
    // Form validation
    const form = document.getElementById('contactForm');
    const inputs = form.querySelectorAll('input, textarea');
    
    function validateEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email);
    }
    
    function showError(input, message) {
      const formGroup = input.closest('.form-group');
      const errorMessage = formGroup.querySelector('.error-message');
      errorMessage.textContent = message;
      errorMessage.classList.remove('hidden');
      input.classList.add('border-red-500');
    }
    
    function hideError(input) {
      const formGroup = input.closest('.form-group');
      const errorMessage = formGroup.querySelector('.error-message');
      errorMessage.classList.add('hidden');
      input.classList.remove('border-red-500');
    }
    
    inputs.forEach(input => {
      input.addEventListener('input', () => {
        hideError(input);
      });
      
      input.addEventListener('blur', () => {
        if (input.value.trim() === '') {
          showError(input, 'Este campo es requerido');
        } else if (input.type === 'email' && !validateEmail(input.value)) {
          showError(input, 'Por favor, ingresa un email válido');
        }
      });
    });
    
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      let isValid = true;
      
      inputs.forEach(input => {
        if (input.value.trim() === '') {
          showError(input, 'Este campo es requerido');
          isValid = false;
        } else if (input.type === 'email' && !validateEmail(input.value)) {
          showError(input, 'Por favor, ingresa un email válido');
          isValid = false;
        }
      });
      
      if (isValid) {
        // Aquí iría la lógica para enviar el formulario
        console.log('Formulario válido, enviando...');
        // Simular envío exitoso
        gsap.to(form, {
          scale: 0.95,
          duration: 0.1,
          yoyo: true,
          repeat: 1,
          onComplete: () => {
            form.reset();
            alert('¡Mensaje enviado con éxito!');
          }
        });
      }
    });
  });
</script>

<style>
  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
  }
  
  .form-group input.border-red-500,
  .form-group textarea.border-red-500 {
    border-color: #ef4444;
  }
  
  .error-message {
    transition: opacity 0.3s ease;
  }
</style> 