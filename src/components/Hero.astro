---
import { companyData } from '../data/data.js';

const { company, mission } = companyData;
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <!-- Background con gradiente y efecto de ruido -->
  <div class="absolute inset-0 bg-gradient-to-br from-primary via-secondary to-primary opacity-90"></div>
  <div class="absolute inset-0 bg-noise opacity-5"></div>
  
  <!-- Formas geométricas animadas -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute top-20 left-[10%] w-72 h-72 bg-white/20 rounded-full blur-3xl mix-blend-overlay animate-blob"></div>
    <div class="absolute top-40 right-[15%] w-96 h-96 bg-white/10 rounded-full blur-2xl mix-blend-overlay animate-blob animation-delay-2000"></div>
    <div class="absolute -bottom-20 left-1/3 w-[500px] h-[500px] bg-white/15 rounded-full blur-3xl mix-blend-overlay animate-blob animation-delay-4000"></div>
  </div>
  
  <!-- Grid decorativo -->
  <div class="absolute inset-0 grid-background opacity-10"></div>
  
  <!-- Contenido principal -->
  <div class="container mx-auto px-6 py-24 relative z-10">
    <div class="flex flex-col items-center text-center max-w-5xl mx-auto">
      <!-- Badge superior -->
      <div class="inline-flex items-center bg-white/10 backdrop-blur-lg rounded-full px-6 py-2 mb-8 border border-white/20">
        <span class="flex w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></span>
        <span class="text-white/90 text-sm font-medium">Innovación Tecnológica 2024</span>
      </div>

      <!-- Título principal con efecto de highlight -->
      <h1 class="text-5xl md:text-7xl font-bold mb-8 text-white hero-title relative">
        <span class="relative inline-block">
          {company.tagline}
          <span class="absolute -inset-1 bg-white/20 blur-2xl -z-10 rounded-2xl"></span>
        </span>
      </h1>

      <!-- Descripción con mejor legibilidad -->
      <p class="text-xl md:text-2xl mb-12 text-white/90 font-light leading-relaxed hero-description max-w-3xl">
        {mission.statement}
      </p>

      <!-- Contenedor de CTAs con efectos mejorados -->
      <div class="flex flex-col sm:flex-row gap-6 w-full max-w-md mx-auto">
        <button class="flex-1 bg-white text-primary px-8 py-4 rounded-xl font-semibold hover:bg-opacity-90 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl hero-cta group relative overflow-hidden">
          <span class="relative z-10">Comienza Gratis</span>
          <div class="absolute inset-0 bg-gradient-to-r from-white via-primary/10 to-white opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        </button>
        <button class="flex-1 bg-transparent backdrop-blur-sm border-2 border-white/30 text-white px-8 py-4 rounded-xl font-semibold transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl hover:border-white hero-cta-secondary group">
          <span class="relative z-10">Conoce Más</span>
        </button>
      </div>

      <!-- Métricas destacadas -->
      <div class="grid grid-cols-2 md:grid-cols-4 gap-6 mt-20 mb-16 md:mb-0 w-full max-w-4xl mx-auto">
        {Object.entries(company.metrics || {
          clientes: "500+",
          proyectos: "1.2K+",
          satisfaccion: "98%",
          paises: "12+"
        }).map(([key, value]) => (
          <div class="text-center p-4 rounded-xl bg-white/5 backdrop-blur-sm border border-white/10">
            <div class="text-3xl font-bold text-white mb-1">{value}</div>
            <div class="text-sm text-white/70 capitalize">{key}</div>
          </div>
        ))}
      </div>
    </div>
  </div>
  
  <!-- Indicador de scroll mejorado -->
  <div class="absolute bottom-4 md:bottom-10 left-1/2 transform -translate-x-1/2 flex flex-col items-center gap-2 z-20">
    <span class="text-white/60 text-sm">Descubre más</span>
    <div class="w-6 h-10 border-2 border-white/30 rounded-full p-1">
      <div class="w-1.5 h-1.5 bg-white rounded-full animate-scroll mx-auto"></div>
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  
  document.addEventListener('DOMContentLoaded', () => {
    const tl = gsap.timeline({ defaults: { ease: 'power3.out' } });
    
    // Animación de entrada
    tl.from('.hero-title', {
      y: 50,
      opacity: 0,
      duration: 1
    })
    .from('.hero-description', {
      y: 30,
      opacity: 0,
      duration: 0.8
    }, '-=0.5')
    .from(['.hero-cta', '.hero-cta-secondary'], {
      y: 20,
      opacity: 0,
      duration: 0.6,
      stagger: 0.2,
      clearProps: 'all'
    }, '-=0.3')
    .from('.grid-cols-2 > div', {
      y: 20,
      opacity: 0,
      duration: 0.4,
      stagger: 0.1,
      clearProps: 'all'
    }, '-=0.2');
  });
</script>

<style>
  .bg-noise {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  }

  .grid-background {
    background-size: 50px 50px;
    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
                      linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  }

  @keyframes blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }
  
  .animate-blob {
    animation: blob 20s infinite;
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  .animation-delay-4000 {
    animation-delay: 4s;
  }

  @keyframes scroll {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    50% {
      transform: translateY(20px);
      opacity: 0.5;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .animate-scroll {
    animation: scroll 2s ease-in-out infinite;
  }

  /* Efecto de hover para los botones */
  .hero-cta, .hero-cta-secondary {
    position: relative;
    isolation: isolate;
  }

  .hero-cta::before, .hero-cta-secondary::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at var(--x, 50%) var(--y, 50%), rgba(255,255,255,0.15) 0%, transparent 100%);
    opacity: 0;
    transition: opacity 0.3s;
    z-index: -1;
  }

  .hero-cta:hover::before, .hero-cta-secondary:hover::before {
    opacity: 1;
  }
</style> 