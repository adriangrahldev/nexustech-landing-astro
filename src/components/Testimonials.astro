---
import { companyData } from '../data/data.js';

const { testimonials } = companyData;
---

<section id="testimonios" class="py-20 bg-gray-50">
  <div class="container mx-auto px-6">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold mb-4 testimonials-title">Lo que dicen nuestros clientes</h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto testimonials-subtitle">
        Experiencias reales de empresas que han transformado su negocio con nosotros
      </p>
    </div>
    
    <div class="relative">
      <div class="testimonials-carousel overflow-hidden">
        <div class="flex transition-transform duration-500 ease-in-out testimonials-track">
          {testimonials.map((testimonial, index) => (
            <div class="w-full md:w-1/2 lg:w-1/3 flex-shrink-0 px-4 testimonial-card" data-index={index}>
              <div class="bg-white p-8 rounded-xl shadow-lg h-full">
                <div class="flex items-center mb-6">
                  <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mr-4">
                    <span class="text-xl font-bold text-primary">
                      {testimonial.name.charAt(0)}
                    </span>
                  </div>
                  <div>
                    <h3 class="font-semibold text-lg">{testimonial.name}</h3>
                    <p class="text-gray-600">{testimonial.position}</p>
                  </div>
                </div>
                <p class="text-gray-600 mb-6">{testimonial.content}</p>
                <div class="flex items-center">
                  <div class="flex text-yellow-400">
                    {[...Array(5)].map((_, i) => (
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                      </svg>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <button class="absolute left-0 top-1/2 transform -translate-y-1/2 bg-white p-3 rounded-full shadow-lg hover:bg-gray-50 transition-colors duration-300 prev-button" aria-label="Anterior">
        <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>
      
      <button class="absolute right-0 top-1/2 transform -translate-y-1/2 bg-white p-3 rounded-full shadow-lg hover:bg-gray-50 transition-colors duration-300 next-button" aria-label="Siguiente">
        <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  
  gsap.registerPlugin(ScrollTrigger);
  
  document.addEventListener('DOMContentLoaded', () => {
    // Animate section title and subtitle
    gsap.from('.testimonials-title', {
      y: 50,
      opacity: 0,
      duration: 0.8,
      scrollTrigger: {
        trigger: '.testimonials-title',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });
    
    gsap.from('.testimonials-subtitle', {
      y: 30,
      opacity: 0,
      duration: 0.8,
      delay: 0.2,
      scrollTrigger: {
        trigger: '.testimonials-subtitle',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });
    
    // Carousel functionality
    const track = document.querySelector('.testimonials-track');
    const cards = document.querySelectorAll('.testimonial-card');
    const prevButton = document.querySelector('.prev-button');
    const nextButton = document.querySelector('.next-button');
    
    let currentIndex = 0;
    const cardWidth = cards[0].offsetWidth;
    const cardsPerView = window.innerWidth >= 1024 ? 3 : window.innerWidth >= 768 ? 2 : 1;
    
    function updateCarousel() {
      const offset = currentIndex * cardWidth;
      gsap.to(track, {
        x: -offset,
        duration: 0.5,
        ease: 'power2.out'
      });
      
      // Update button states
      prevButton.disabled = currentIndex === 0;
      nextButton.disabled = currentIndex >= cards.length - cardsPerView;
      
      gsap.to(prevButton, {
        opacity: prevButton.disabled ? 0.5 : 1,
        duration: 0.3
      });
      
      gsap.to(nextButton, {
        opacity: nextButton.disabled ? 0.5 : 1,
        duration: 0.3
      });
    }
    
    prevButton.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--;
        updateCarousel();
      }
    });
    
    nextButton.addEventListener('click', () => {
      if (currentIndex < cards.length - cardsPerView) {
        currentIndex++;
        updateCarousel();
      }
    });
    
    // Animate cards on scroll
    cards.forEach((card, index) => {
      gsap.from(card, {
        y: 50,
        opacity: 0,
        duration: 0.8,
        delay: index * 0.2,
        scrollTrigger: {
          trigger: card,
          start: 'top 80%',
          toggleActions: 'play none none reverse'
        }
      });
    });
    
    // Handle window resize
    window.addEventListener('resize', () => {
      const newCardsPerView = window.innerWidth >= 1024 ? 3 : window.innerWidth >= 768 ? 2 : 1;
      if (newCardsPerView !== cardsPerView) {
        currentIndex = 0;
        updateCarousel();
      }
    });
    
    // Initial setup
    updateCarousel();
  });
</script>

<style>
  .testimonials-carousel {
    position: relative;
    margin: 0 -1rem;
    padding: 0 1rem;
  }
  
  .testimonials-track {
    display: flex;
    gap: 2rem;
  }
  
  .testimonial-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .testimonial-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  .prev-button,
  .next-button {
    opacity: 1;
    transition: opacity 0.3s ease, transform 0.3s ease;
  }
  
  .prev-button:hover,
  .next-button:hover {
    transform: translateY(-50%) scale(1.1);
  }
  
  .prev-button:disabled,
  .next-button:disabled {
    cursor: not-allowed;
  }
</style> 